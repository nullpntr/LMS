/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchIndividual.java
 *
 * Created on Nov 22, 2011, 3:41:45 AM
 */

package nita.project.gui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import nita.project.db.BookDB;
import nita.project.db.Session;
import nita.project.objects.BookIndividual;

/**
 *
 * @author Ritika Sahay
 */
public class SearchIndividual extends javax.swing.JDialog {

    /** Creates new form SearchIndividual */
    public SearchIndividual(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        int value = new Session().getSession();
        if (value == 2) {
            issue.setEnabled(true);
            retrn.setEnabled(true);
        } else {
            issue.setEnabled(false);
            retrn.setEnabled(false);
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        acc_num = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        msg = new javax.swing.JLabel();
        issue = new javax.swing.JButton();
        retrn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("Individual Book Inquairy");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("Account No");

        acc_num.setFont(new java.awt.Font("Tahoma", 0, 14));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Book Title", "Book Author", "Book Price", "Availabilty", "Holder Type", "Holder ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Holder Types : F(Faculty), S(Student), N(None).");

        jButton2.setForeground(new java.awt.Color(255, 51, 0));
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        msg.setForeground(new java.awt.Color(255, 51, 0));

        issue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        issue.setForeground(new java.awt.Color(0, 153, 51));
        issue.setText("Issue");
        issue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueActionPerformed(evt);
            }
        });

        retrn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        retrn.setForeground(new java.awt.Color(0, 51, 204));
        retrn.setText("Return");
        retrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acc_num, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 315, Short.MAX_VALUE)
                        .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(retrn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(issue, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(101, 101, 101)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acc_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(retrn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(issue, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  String id=acc_num.getText();
 ArrayList<String> l = new BookDB().checkBookAccNum();
 if(!l.contains(id))
 {
 JOptionPane.showMessageDialog(this, "book does not exist");
 }
 else{
     
     ArrayList<BookIndividual> list = new BookDB().searchIndiBook(id);
     System.out.println(list);
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        model.setRowCount(list.size());
        BookIndividual ab = null;
        for (int i = 0; i < list.size(); i++){
            ab = list.get(i);
            model.setValueAt(ab.getBookName(), i, 0);
            model.setValueAt(ab.getAuthorName(), i, 1);
            model.setValueAt(ab.getBookPrice(), i, 2);
            model.setValueAt(ab.getFlag(), i, 3);
            if(ab.getFlag().equalsIgnoreCase("AVAILABLE"))
            {
            model.setValueAt("-", i, 4);
            }
            else{
            model.setValueAt(ab.getHolderType(), i, 4);
            }
            if(ab.getHolderId().equals("N"))
            {
            model.setValueAt("-", i, 5);
            }
            else{
            model.setValueAt(ab.getHolderId(), i, 5);
        }
        }
       
 }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        int row = table.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(this, "Please select one reserved book.");
        }else{
        String hid= (String)table.getValueAt(row, 5);
        String accNo = acc_num.getText();
        if(hid.equals("-")){
        Object[] options = {"No, Don't.", "Yes, Delete"};
        int n = JOptionPane.showOptionDialog(this,
                "Do you want to Delete the Book?",

                "You are about to Delete a Book!",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[1]);

        if(n==1){
            boolean b = new BookDB().delBook(accNo);
            if(b){
                
                JOptionPane.showMessageDialog(this, "Book Deleted.");
            }else{
                msg.setText("Book Could not be deleted.");
            }
        }}else{
            msg.setText("Can't be deleted, issued/reserved to/by : "+hid);
        }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void issueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        String accNo = acc_num.getText();
        int row = table.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(this, "Please select one reserved book.");
        }else{
        String ava = (String) table.getValueAt(row, 3);
        if (ava.equals("UNAVAILABLE")) {
            msg.setText("Book is already Issued.");
        } else if (ava.equals("RESERVED")) {
            String hid = (String) table.getValueAt(row, 5);
            String ht = (String) table.getValueAt(row, 4);
            boolean b = new BookDB().issueBook(accNo, hid, ht);
            if (b) {
                    JOptionPane.showMessageDialog(this, "Book Issued.");
                    this.setVisible(false);
                } else {
                   JOptionPane.showMessageDialog(this, "Book Could not be Issued.");
                    this.setVisible(false);
                }
        } else if (ava.equals("AVAILABLE")) {
            String s = (String) JOptionPane.showInputDialog(
                    this,
                    "Enter Holder ID: \n"
                + "",
                "Please Enter the value: ",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                "");
        if (s.isEmpty()) {
            msg.setText("Please provide a Valid Id.");
        } else {
            Object[] options = {"Faculty", "Student"};
            int n = JOptionPane.showOptionDialog(this,
                    "Enter Holder Type:",
                    "Please enter Holder Type :",
                    JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[1]);
           
            if (n == 0) {
                String hlt = "F";
                boolean b = new BookDB().issueBook(accNo, s, hlt);
                if (b) {
                    JOptionPane.showMessageDialog(this, "Book Issued.");
                    this.setVisible(false);
                } else {
                   JOptionPane.showMessageDialog(this, "Book Could not be Issued.");
                    
                }
            } else if (n == 1) {
                String hlt = "S";
               boolean b = new BookDB().issueBook(accNo, s, hlt);
               if (b) {
                    JOptionPane.showMessageDialog(this, "Book Issued.");
                    this.setVisible(false);
                } else {
                   JOptionPane.showMessageDialog(this, "Book Could not be Issued.");
                    
                }
           }

        }}}
        
    }//GEN-LAST:event_issueActionPerformed

    private void retrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrnActionPerformed
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        int row = table.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(this, "Please select one reserved book.");
        }else{
        String ava = (String)table.getValueAt(row, 3);
        String accNo = acc_num.getText();
        if(!ava.equals("AVAILABLE")){
            boolean b = new BookDB().returnBook(accNo);
            if(b){
                msg.setText("Book returned.");
                 this.setVisible(false);
            }else{
                msg.setText("Book couldn't be returned.");
            }
        }else{
           JOptionPane.showMessageDialog(this, "Book is already available.");
            }
         
        }
    }//GEN-LAST:event_retrnActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SearchIndividual dialog = new SearchIndividual(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField acc_num;
    private javax.swing.JButton issue;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel msg;
    private javax.swing.JButton retrn;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

}
